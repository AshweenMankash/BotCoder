"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * @module botbuilder-dialogs
 */
/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
const Recognizers = require("@microsoft/recognizers-text-number");
const botbuilder_core_1 = require("botbuilder-core");
const prompt_1 = require("./prompt");
/**
 * Prompts a user to enter a number.
 *
 * @remarks
 * By default the prompt will return to the calling dialog a `number` representing the users input.
 */
class NumberPrompt extends prompt_1.Prompt {
    /**
     * Creates a new NumberPrompt instance.
     * @param dialogId Unique ID of the dialog within its parent `DialogSet` or `ComponentDialog`.
     * @param validator (Optional) validator that will be called each time the user responds to the prompt.
     * @param defaultLocale (Optional) locale to use if `TurnContext.activity.locale` is not specified. Defaults to a value of `en-us`.
     */
    constructor(dialogId, validator, defaultLocale) {
        super(dialogId, validator);
        this.defaultLocale = defaultLocale;
    }
    async onPrompt(context, state, options, isRetry) {
        if (isRetry && options.retryPrompt) {
            await context.sendActivity(options.retryPrompt, undefined, botbuilder_core_1.InputHints.ExpectingInput);
        }
        else if (options.prompt) {
            await context.sendActivity(options.prompt, undefined, botbuilder_core_1.InputHints.ExpectingInput);
        }
    }
    async onRecognize(context, state, options) {
        const result = { succeeded: false };
        const activity = context.activity;
        const utterance = activity.text;
        const locale = activity.locale || this.defaultLocale || 'en-us';
        const results = Recognizers.recognizeNumber(utterance, locale);
        if (results.length > 0 && results[0].resolution) {
            result.succeeded = true;
            result.value = parseFloat(results[0].resolution.value);
        }
        return result;
    }
}
exports.NumberPrompt = NumberPrompt;
//# sourceMappingURL=numberPrompt.js.map